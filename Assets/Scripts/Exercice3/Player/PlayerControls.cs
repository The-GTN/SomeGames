//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""FloorMove"",
            ""id"": ""13a9903f-7cdc-400e-954b-fa0fc6c0e034"",
            ""actions"": [
                {
                    ""name"": ""HorizontalMove"",
                    ""type"": ""PassThrough"",
                    ""id"": ""04090655-721e-4fe2-baed-b09f3b8221e3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""7cb6b1f0-b7cd-4233-9a9e-52ad0b00c4dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseX"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7b71ecbc-066f-4862-8d6a-cb528b05d7de"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseY"",
                    ""type"": ""PassThrough"",
                    ""id"": ""da75ddac-3e9f-4ad7-b77b-d72d879fe59e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3371717c-d8eb-4dee-aac7-6827e161fa9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""wasd"",
                    ""id"": ""210bacf3-f380-4f45-bf5f-ad7e820e7384"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f5d43e6a-ebac-4e59-862b-a7f42f555b0e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4713e228-d2f9-4232-bbb0-4bd114cda01d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""863df241-6511-4d44-8913-3a04990a0f36"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""cb96b612-ac9f-4972-b5e7-bc8b0316bbee"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""arrows"",
                    ""id"": ""62027372-c809-47b6-8f7c-ffecf1c1ab41"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6a123534-7962-4bd5-9741-c62164708451"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""eebb2e45-f182-4dff-a9a3-e0a52a468f20"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c4ca3268-9e05-4f2c-b95a-e17f48b5cf64"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7797c051-2a13-45ee-af1d-f37a3c63e560"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HorizontalMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5f9aeeb4-5dd3-4bb8-bc08-aa241074c7a9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d9c949e-e23a-46bf-83cb-c2daece935fe"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7aba60a4-1354-4de6-ae76-9607b09a8438"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26ef80c5-5a7a-43c6-b116-c612a6f36455"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""139cfef3-7fa8-4929-bb85-199198942392"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FloorMove
        m_FloorMove = asset.FindActionMap("FloorMove", throwIfNotFound: true);
        m_FloorMove_HorizontalMove = m_FloorMove.FindAction("HorizontalMove", throwIfNotFound: true);
        m_FloorMove_Jump = m_FloorMove.FindAction("Jump", throwIfNotFound: true);
        m_FloorMove_MouseX = m_FloorMove.FindAction("MouseX", throwIfNotFound: true);
        m_FloorMove_MouseY = m_FloorMove.FindAction("MouseY", throwIfNotFound: true);
        m_FloorMove_Shoot = m_FloorMove.FindAction("Shoot", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FloorMove
    private readonly InputActionMap m_FloorMove;
    private IFloorMoveActions m_FloorMoveActionsCallbackInterface;
    private readonly InputAction m_FloorMove_HorizontalMove;
    private readonly InputAction m_FloorMove_Jump;
    private readonly InputAction m_FloorMove_MouseX;
    private readonly InputAction m_FloorMove_MouseY;
    private readonly InputAction m_FloorMove_Shoot;
    public struct FloorMoveActions
    {
        private @PlayerControls m_Wrapper;
        public FloorMoveActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @HorizontalMove => m_Wrapper.m_FloorMove_HorizontalMove;
        public InputAction @Jump => m_Wrapper.m_FloorMove_Jump;
        public InputAction @MouseX => m_Wrapper.m_FloorMove_MouseX;
        public InputAction @MouseY => m_Wrapper.m_FloorMove_MouseY;
        public InputAction @Shoot => m_Wrapper.m_FloorMove_Shoot;
        public InputActionMap Get() { return m_Wrapper.m_FloorMove; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FloorMoveActions set) { return set.Get(); }
        public void SetCallbacks(IFloorMoveActions instance)
        {
            if (m_Wrapper.m_FloorMoveActionsCallbackInterface != null)
            {
                @HorizontalMove.started -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnHorizontalMove;
                @HorizontalMove.performed -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnHorizontalMove;
                @HorizontalMove.canceled -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnHorizontalMove;
                @Jump.started -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnJump;
                @MouseX.started -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseX;
                @MouseX.performed -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseX;
                @MouseX.canceled -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseX;
                @MouseY.started -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseY;
                @MouseY.performed -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseY;
                @MouseY.canceled -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnMouseY;
                @Shoot.started -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_FloorMoveActionsCallbackInterface.OnShoot;
            }
            m_Wrapper.m_FloorMoveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HorizontalMove.started += instance.OnHorizontalMove;
                @HorizontalMove.performed += instance.OnHorizontalMove;
                @HorizontalMove.canceled += instance.OnHorizontalMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MouseX.started += instance.OnMouseX;
                @MouseX.performed += instance.OnMouseX;
                @MouseX.canceled += instance.OnMouseX;
                @MouseY.started += instance.OnMouseY;
                @MouseY.performed += instance.OnMouseY;
                @MouseY.canceled += instance.OnMouseY;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
            }
        }
    }
    public FloorMoveActions @FloorMove => new FloorMoveActions(this);
    public interface IFloorMoveActions
    {
        void OnHorizontalMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouseX(InputAction.CallbackContext context);
        void OnMouseY(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
    }
}
